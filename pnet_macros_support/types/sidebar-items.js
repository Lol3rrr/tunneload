initSidebarItems({"type":[["u1","Represents an unsigned, 1-bit integer."],["u10be","Represents an unsigned 10-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u10he","Represents an unsigned 10-bit integer in host endianness."],["u10le","Represents an unsigned 10-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u11be","Represents an unsigned 11-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u11he","Represents an unsigned 11-bit integer in host endianness."],["u11le","Represents an unsigned 11-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u12be","Represents an unsigned 12-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u12he","Represents an unsigned 12-bit integer in host endianness."],["u12le","Represents an unsigned 12-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u13be","Represents an unsigned 13-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u13he","Represents an unsigned 13-bit integer in host endianness."],["u13le","Represents an unsigned 13-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u14be","Represents an unsigned 14-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u14he","Represents an unsigned 14-bit integer in host endianness."],["u14le","Represents an unsigned 14-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u15be","Represents an unsigned 15-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u15he","Represents an unsigned 15-bit integer in host endianness."],["u15le","Represents an unsigned 15-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u16be","Represents an unsigned 16-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u16he","Represents an unsigned 16-bit integer in host endianness."],["u16le","Represents an unsigned 16-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u17be","Represents an unsigned 17-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u17he","Represents an unsigned 17-bit integer in host endianness."],["u17le","Represents an unsigned 17-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u18be","Represents an unsigned 18-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u18he","Represents an unsigned 18-bit integer in host endianness."],["u18le","Represents an unsigned 18-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u19be","Represents an unsigned 19-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u19he","Represents an unsigned 19-bit integer in host endianness."],["u19le","Represents an unsigned 19-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u2","Represents an unsigned, 2-bit integer."],["u20be","Represents an unsigned 20-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u20he","Represents an unsigned 20-bit integer in host endianness."],["u20le","Represents an unsigned 20-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u21be","Represents an unsigned 21-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u21he","Represents an unsigned 21-bit integer in host endianness."],["u21le","Represents an unsigned 21-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u22be","Represents an unsigned 22-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u22he","Represents an unsigned 22-bit integer in host endianness."],["u22le","Represents an unsigned 22-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u23be","Represents an unsigned 23-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u23he","Represents an unsigned 23-bit integer in host endianness."],["u23le","Represents an unsigned 23-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u24be","Represents an unsigned 24-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u24he","Represents an unsigned 24-bit integer in host endianness."],["u24le","Represents an unsigned 24-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u25be","Represents an unsigned 25-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u25he","Represents an unsigned 25-bit integer in host endianness."],["u25le","Represents an unsigned 25-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u26be","Represents an unsigned 26-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u26he","Represents an unsigned 26-bit integer in host endianness."],["u26le","Represents an unsigned 26-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u27be","Represents an unsigned 27-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u27he","Represents an unsigned 27-bit integer in host endianness."],["u27le","Represents an unsigned 27-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u28be","Represents an unsigned 28-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u28he","Represents an unsigned 28-bit integer in host endianness."],["u28le","Represents an unsigned 28-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u29be","Represents an unsigned 29-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u29he","Represents an unsigned 29-bit integer in host endianness."],["u29le","Represents an unsigned 29-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u3","Represents an unsigned, 3-bit integer."],["u30be","Represents an unsigned 30-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u30he","Represents an unsigned 30-bit integer in host endianness."],["u30le","Represents an unsigned 30-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u31be","Represents an unsigned 31-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u31he","Represents an unsigned 31-bit integer in host endianness."],["u31le","Represents an unsigned 31-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u32be","Represents an unsigned 32-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u32he","Represents an unsigned 32-bit integer in host endianness."],["u32le","Represents an unsigned 32-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u33be","Represents an unsigned 33-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u33he","Represents an unsigned 33-bit integer in host endianness."],["u33le","Represents an unsigned 33-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u34be","Represents an unsigned 34-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u34he","Represents an unsigned 34-bit integer in host endianness."],["u34le","Represents an unsigned 34-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u35be","Represents an unsigned 35-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u35he","Represents an unsigned 35-bit integer in host endianness."],["u35le","Represents an unsigned 35-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u36be","Represents an unsigned 36-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u36he","Represents an unsigned 36-bit integer in host endianness."],["u36le","Represents an unsigned 36-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u37be","Represents an unsigned 37-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u37he","Represents an unsigned 37-bit integer in host endianness."],["u37le","Represents an unsigned 37-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u38be","Represents an unsigned 38-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u38he","Represents an unsigned 38-bit integer in host endianness."],["u38le","Represents an unsigned 38-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u39be","Represents an unsigned 39-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u39he","Represents an unsigned 39-bit integer in host endianness."],["u39le","Represents an unsigned 39-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u4","Represents an unsigned, 4-bit integer."],["u40be","Represents an unsigned 40-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u40he","Represents an unsigned 40-bit integer in host endianness."],["u40le","Represents an unsigned 40-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u41be","Represents an unsigned 41-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u41he","Represents an unsigned 41-bit integer in host endianness."],["u41le","Represents an unsigned 41-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u42be","Represents an unsigned 42-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u42he","Represents an unsigned 42-bit integer in host endianness."],["u42le","Represents an unsigned 42-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u43be","Represents an unsigned 43-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u43he","Represents an unsigned 43-bit integer in host endianness."],["u43le","Represents an unsigned 43-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u44be","Represents an unsigned 44-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u44he","Represents an unsigned 44-bit integer in host endianness."],["u44le","Represents an unsigned 44-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u45be","Represents an unsigned 45-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u45he","Represents an unsigned 45-bit integer in host endianness."],["u45le","Represents an unsigned 45-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u46be","Represents an unsigned 46-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u46he","Represents an unsigned 46-bit integer in host endianness."],["u46le","Represents an unsigned 46-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u47be","Represents an unsigned 47-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u47he","Represents an unsigned 47-bit integer in host endianness."],["u47le","Represents an unsigned 47-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u48be","Represents an unsigned 48-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u48he","Represents an unsigned 48-bit integer in host endianness."],["u48le","Represents an unsigned 48-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u49be","Represents an unsigned 49-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u49he","Represents an unsigned 49-bit integer in host endianness."],["u49le","Represents an unsigned 49-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u5","Represents an unsigned, 5-bit integer."],["u50be","Represents an unsigned 50-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u50he","Represents an unsigned 50-bit integer in host endianness."],["u50le","Represents an unsigned 50-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u51be","Represents an unsigned 51-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u51he","Represents an unsigned 51-bit integer in host endianness."],["u51le","Represents an unsigned 51-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u52be","Represents an unsigned 52-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u52he","Represents an unsigned 52-bit integer in host endianness."],["u52le","Represents an unsigned 52-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u53be","Represents an unsigned 53-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u53he","Represents an unsigned 53-bit integer in host endianness."],["u53le","Represents an unsigned 53-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u54be","Represents an unsigned 54-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u54he","Represents an unsigned 54-bit integer in host endianness."],["u54le","Represents an unsigned 54-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u55be","Represents an unsigned 55-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u55he","Represents an unsigned 55-bit integer in host endianness."],["u55le","Represents an unsigned 55-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u56be","Represents an unsigned 56-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u56he","Represents an unsigned 56-bit integer in host endianness."],["u56le","Represents an unsigned 56-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u57be","Represents an unsigned 57-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u57he","Represents an unsigned 57-bit integer in host endianness."],["u57le","Represents an unsigned 57-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u58be","Represents an unsigned 58-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u58he","Represents an unsigned 58-bit integer in host endianness."],["u58le","Represents an unsigned 58-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u59be","Represents an unsigned 59-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u59he","Represents an unsigned 59-bit integer in host endianness."],["u59le","Represents an unsigned 59-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u6","Represents an unsigned, 6-bit integer."],["u60be","Represents an unsigned 60-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u60he","Represents an unsigned 60-bit integer in host endianness."],["u60le","Represents an unsigned 60-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u61be","Represents an unsigned 61-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u61he","Represents an unsigned 61-bit integer in host endianness."],["u61le","Represents an unsigned 61-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u62be","Represents an unsigned 62-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u62he","Represents an unsigned 62-bit integer in host endianness."],["u62le","Represents an unsigned 62-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u63be","Represents an unsigned 63-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u63he","Represents an unsigned 63-bit integer in host endianness."],["u63le","Represents an unsigned 63-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u64be","Represents an unsigned 64-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u64he","Represents an unsigned 64-bit integer in host endianness."],["u64le","Represents an unsigned 64-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."],["u7","Represents an unsigned, 7-bit integer."],["u9be","Represents an unsigned 9-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as big-endian, but accessors/mutators will return/take host-order values."],["u9he","Represents an unsigned 9-bit integer in host endianness."],["u9le","Represents an unsigned 9-bit integer. libpnet #[packet]-derived structs using this type will hold it in memory as little-endian, but accessors/mutators will return/take host-order values."]]});