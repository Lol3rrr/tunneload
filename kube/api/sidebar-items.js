initSidebarItems({"enum":[["Patch","Describes changes that should be applied to a resource"],["PropagationPolicy","Propagation policy when deleting single objects"],["WatchEvent","A raw event returned from a watch query"]],"struct":[["Api","A generic Api abstraction"],["DeleteParams","Common query parameters for delete calls"],["DynamicResource","A dynamic builder for Resource"],["EvictParams","Params for evictable objects"],["ListMeta","ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}."],["ListParams","Common query parameters used in watch/list/delete calls on collections"],["LogParams","Params for logging"],["NotUsed","Empty struct for when data should be discarded"],["Object","A standard Kubernetes object with `.spec` and `.status`."],["ObjectList","A generic Kubernetes object list"],["ObjectMeta","ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."],["PatchParams","Common query parameters for patch calls"],["PostParams","Common query parameters for put/post calls"],["Resource","A Kubernetes resource that can be accessed through the API"],["ScaleSpec","ScaleSpec describes the attributes of a scale subresource."],["ScaleStatus","ScaleStatus represents the current status of a scale subresource."],["TypeMeta","A convenience struct for ad-hoc serialization."]],"trait":[["Evictable","Marker trait for objects that can be evicted"],["Loggable","Marker trait for objects that has logs"],["Meta","An accessor trait for Metadata."]]});